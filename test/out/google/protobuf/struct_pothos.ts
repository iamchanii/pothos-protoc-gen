// Protocol Buffers - Google's data interchange format
// Copyright 2008 Google Inc.  All rights reserved.
// https://developers.google.com/protocol-buffers/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// @generated by pothos-protoc-gen v0.2.1 with parameter "import_extension=js,ts_nocheck=true,builder_path=../builder.js,print_preamble=true,remove_type_name=true"
// @generated from file google/protobuf/struct.proto (package google.protobuf, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { create, enumFromJson } from '@bufbuild/protobuf';
import { builder } from '../../../builder.js';
import type { ListValue, Struct, Value } from './struct_pb.js';
import {
  ListValueSchema,
  NullValueSchema,
  StructSchema,
  ValueSchema,
} from './struct_pb.js';

/**
 * `NullValue` is a singleton enumeration to represent the null value for the
 * `Value` type union.
 *
 * The JSON representation for `NullValue` is JSON `null`.
 *
 * @generated from enum google.protobuf.NullValue
 */
export const GoogleProtobufNullValueRef = builder.enumType(
  'GoogleProtobufNullValue',
  {
    description:
      '`NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.',
    values: {
      /**
       * Null value.
       *
       * @generated from enum value: NULL_VALUE = 0;
       */
      NULL_VALUE: {
        value: enumFromJson(NullValueSchema, 'NULL_VALUE'),
        description: 'Null value.',
        deprecated: false,
      },
    } as const,
  },
);

/**
 * `Struct` represents a structured data value, consisting of fields
 * which map to dynamically typed values. In some languages, `Struct`
 * might be supported by a native representation. For example, in
 * scripting languages like JS a struct is represented as an
 * object. The details of that representation are described together
 * with the proto support for the language.
 *
 * The JSON representation for `Struct` is JSON object.
 *
 * @generated from message google.protobuf.Struct
 */
export const GoogleProtobufStructRef = builder
  .objectRef<Struct>('GoogleProtobufStruct')
  .implement({
    description:
      '`Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        resolve: () => false,
        description:
          'Fake field because GraphQL does not support empty objects. Do not query, use __typename instead.',
      }),
      /**
       * Unordered map of dynamically typed values.
       *
       * @generated from field: map<string, google.protobuf.Value> fields = 1;
       */
      fields: t.field({
        type: ['String_GoogleProtobufValueMapEntry'],
        resolve: (parent) =>
          Object.entries(parent.fields).map(([key, value]) => ({
            key: String(key),
            value: value,
          })),
        description: 'Unordered map of dynamically typed values.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * `Value` represents a dynamically typed value which can be either
 * null, a number, a string, a boolean, a recursive struct value, or a
 * list of values. A producer of value is expected to set one of these
 * variants. Absence of any variant indicates an error.
 *
 * The JSON representation for `Value` is JSON value.
 *
 * @generated from message google.protobuf.Value
 */
export const GoogleProtobufValueRef = builder
  .objectRef<Value>('GoogleProtobufValue')
  .implement({
    description:
      '`Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of these\n variants. Absence of any variant indicates an error.\n\n The JSON representation for `Value` is JSON value.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        resolve: () => false,
        description:
          'Fake field because GraphQL does not support empty objects. Do not query, use __typename instead.',
      }),
      /**
       * Represents a null value.
       *
       * @generated from field: google.protobuf.NullValue null_value = 1;
       */
      nullValue: t.field({
        type: 'GoogleProtobufNullValue',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'nullValue'
            ? enumFromJson(NullValueSchema, oneofVal)
            : null;
        },
        description: 'Represents a null value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a double value.
       *
       * @generated from field: double number_value = 2;
       */
      numberValue: t.field({
        type: 'Float',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'numberValue' ? oneofVal : null;
        },
        description: 'Represents a double value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a string value.
       *
       * @generated from field: string string_value = 3;
       */
      stringValue: t.field({
        type: 'String',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'stringValue' ? oneofVal : null;
        },
        description: 'Represents a string value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a boolean value.
       *
       * @generated from field: bool bool_value = 4;
       */
      boolValue: t.field({
        type: 'Boolean',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'boolValue' ? oneofVal : null;
        },
        description: 'Represents a boolean value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a structured value.
       *
       * @generated from field: google.protobuf.Struct struct_value = 5;
       */
      structValue: t.field({
        type: 'GoogleProtobufStruct',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'structValue' ? oneofVal : null;
        },
        description: 'Represents a structured value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a repeated `Value`.
       *
       * @generated from field: google.protobuf.ListValue list_value = 6;
       */
      listValue: t.field({
        type: 'GoogleProtobufListValue',
        resolve: (parent) => {
          const oneofVal = parent.kind.value;
          return parent.kind.case === 'listValue' ? oneofVal : null;
        },
        description: 'Represents a repeated `Value`.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * `ListValue` is a wrapper around a repeated field of values.
 *
 * The JSON representation for `ListValue` is JSON array.
 *
 * @generated from message google.protobuf.ListValue
 */
export const GoogleProtobufListValueRef = builder
  .objectRef<ListValue>('GoogleProtobufListValue')
  .implement({
    description:
      '`ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        resolve: () => false,
        description:
          'Fake field because GraphQL does not support empty objects. Do not query, use __typename instead.',
      }),
      /**
       * Repeated field of dynamically typed values.
       *
       * @generated from field: repeated google.protobuf.Value values = 1;
       */
      values: t.field({
        type: ['GoogleProtobufValue'],
        resolve: (parent) => parent.values,
        description: 'Repeated field of dynamically typed values.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * Unordered map of dynamically typed values.
 *
 * @generated from field: map<string, google.protobuf.Value> fields = 1;
 */
export const String_GoogleProtobufValueMapEntryRef = builder
  .objectRef<{ key: string; value: Value }>(
    'String_GoogleProtobufValueMapEntry',
  )
  .implement({
    description:
      'Key-value pair for the map field fields of google.protobuf.Value.',
    fields: (t) => ({
      key: t.exposeString('key', { nullable: false }),
      value: t.expose('value', {
        type: 'GoogleProtobufValue',
        nullable: false,
      }),
    }),
  });

/**
 * `Struct` represents a structured data value, consisting of fields
 * which map to dynamically typed values. In some languages, `Struct`
 * might be supported by a native representation. For example, in
 * scripting languages like JS a struct is represented as an
 * object. The details of that representation are described together
 * with the proto support for the language.
 *
 * The JSON representation for `Struct` is JSON object.
 *
 * @generated from message google.protobuf.Struct
 */
export const GoogleProtobufStructInputRef = builder
  .inputRef<Struct>('GoogleProtobufStructInput')
  .implement({
    description:
      '`Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        description:
          'Fake field because GraphQL does not support empty input. Do not use, It does nothing.',
      }),
      /**
       * Unordered map of dynamically typed values.
       *
       * @generated from field: map<string, google.protobuf.Value> fields = 1;
       */
      fields: t.field({
        type: ['String_GoogleProtobufValueMapEntryInput'],
        description: 'Unordered map of dynamically typed values.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * `Value` represents a dynamically typed value which can be either
 * null, a number, a string, a boolean, a recursive struct value, or a
 * list of values. A producer of value is expected to set one of these
 * variants. Absence of any variant indicates an error.
 *
 * The JSON representation for `Value` is JSON value.
 *
 * @generated from message google.protobuf.Value
 */
export const GoogleProtobufValueInputRef = builder
  .inputRef<Value>('GoogleProtobufValueInput')
  .implement({
    description:
      '`Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of these\n variants. Absence of any variant indicates an error.\n\n The JSON representation for `Value` is JSON value.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        description:
          'Fake field because GraphQL does not support empty input. Do not use, It does nothing.',
      }),
      /**
       * Represents a null value.
       *
       * @generated from field: google.protobuf.NullValue null_value = 1;
       */
      nullValue: t.field({
        type: 'GoogleProtobufNullValue',
        description: 'Represents a null value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a double value.
       *
       * @generated from field: double number_value = 2;
       */
      numberValue: t.field({
        type: 'Float',
        description: 'Represents a double value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a string value.
       *
       * @generated from field: string string_value = 3;
       */
      stringValue: t.field({
        type: 'String',
        description: 'Represents a string value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a boolean value.
       *
       * @generated from field: bool bool_value = 4;
       */
      boolValue: t.field({
        type: 'Boolean',
        description: 'Represents a boolean value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a structured value.
       *
       * @generated from field: google.protobuf.Struct struct_value = 5;
       */
      structValue: t.field({
        type: 'GoogleProtobufStructInput',
        description: 'Represents a structured value.',
        deprecationReason: undefined,
      }),
      /**
       * Represents a repeated `Value`.
       *
       * @generated from field: google.protobuf.ListValue list_value = 6;
       */
      listValue: t.field({
        type: 'GoogleProtobufListValueInput',
        description: 'Represents a repeated `Value`.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * `ListValue` is a wrapper around a repeated field of values.
 *
 * The JSON representation for `ListValue` is JSON array.
 *
 * @generated from message google.protobuf.ListValue
 */
export const GoogleProtobufListValueInputRef = builder
  .inputRef<ListValue>('GoogleProtobufListValueInput')
  .implement({
    description:
      '`ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.',
    deprecationReason: undefined,
    fields: (t) => ({
      _: t.boolean({
        description:
          'Fake field because GraphQL does not support empty input. Do not use, It does nothing.',
      }),
      /**
       * Repeated field of dynamically typed values.
       *
       * @generated from field: repeated google.protobuf.Value values = 1;
       */
      values: t.field({
        type: ['GoogleProtobufValueInput'],
        description: 'Repeated field of dynamically typed values.',
        deprecationReason: undefined,
      }),
    }),
  });

/**
 * Unordered map of dynamically typed values.
 *
 * @generated from field: map<string, google.protobuf.Value> fields = 1;
 */
export const String_GoogleProtobufValueMapEntryInputRef = builder
  .inputRef<{ key: string; value: Value }>(
    'String_GoogleProtobufValueMapEntryInput',
  )
  .implement({
    description:
      'Key-value pair for the map field fields of google.protobuf.Value.',
    fields: (t) => ({
      key: t.string({ required: true }),
      value: t.field({ type: 'GoogleProtobufValueInput', required: true }),
    }),
  });

/**
 * A function to make a google.protobuf.Struct input
 */
export function makeGoogleProtobufStructInput(input: any): Struct {
  const message = create(StructSchema, {
    /**
     * Unordered map of dynamically typed values.
     *
     * @generated from field: map<string, google.protobuf.Value> fields = 1;
     */
    fields: input?.fields
      ? Object.fromEntries(
          input?.fields?.map(({ key, value }) => [
            key,
            makeGoogleProtobufValueInput(value),
          ]),
        )
      : null,
  });

  delete message.$typeName;
  return message;
}

/**
 * A function to make a google.protobuf.Value input
 */
export function makeGoogleProtobufValueInput(input: any): Value {
  const message = create(ValueSchema, {
    /**
     * The kind of value.
     *
     * @generated from oneof google.protobuf.Value.kind
     */
    kind:
      typeof input?.nullValue !== 'undefined'
        ? { case: 'nullValue', value: input?.nullValue }
        : typeof input?.numberValue !== 'undefined'
          ? { case: 'numberValue', value: input?.numberValue }
          : typeof input?.stringValue !== 'undefined'
            ? { case: 'stringValue', value: input?.stringValue }
            : typeof input?.boolValue !== 'undefined'
              ? { case: 'boolValue', value: input?.boolValue }
              : typeof input?.structValue !== 'undefined'
                ? {
                    case: 'structValue',
                    value: input?.structValue
                      ? makeGoogleProtobufStructInput(input.structValue)
                      : null,
                  }
                : typeof input?.listValue !== 'undefined'
                  ? {
                      case: 'listValue',
                      value: input?.listValue
                        ? makeGoogleProtobufListValueInput(input.listValue)
                        : null,
                    }
                  : undefined,
  });

  delete message.$typeName;
  return message;
}

/**
 * A function to make a google.protobuf.ListValue input
 */
export function makeGoogleProtobufListValueInput(input: any): ListValue {
  const message = create(ListValueSchema, {
    /**
     * Repeated field of dynamically typed values.
     *
     * @generated from field: repeated google.protobuf.Value values = 1;
     */
    values: input?.values
      ? input.values.map(makeGoogleProtobufValueInput)
      : null,
  });

  delete message.$typeName;
  return message;
}
